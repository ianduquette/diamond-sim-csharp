# LOB at Instant of Third Out (.prp)

> Include .prp/dotnet_project_rules.prp
> Follow `.rules/style.md` and `.rules/testing.md`
> Spec only — no code here

**Status:** Draft
**Created:** 2025-10-26
**Epic:** Baseball Simulation Engine – Scoring & Recording
**Depends on:** PRD-20251025-01 Core Rules Corrections

---

## Goal
Ensure **Left On Base (LOB)** is computed from the runners **present at the instant the third out occurs**, not from the post-play base state. Keep existing walk-off behavior (**LOB=0**).

---

## Purpose & Scope
- **Owns:** Source-of-truth for LOB when a play **ends the half-inning**.
- **Doesn’t own:** How bases/outs/runs are otherwise updated; walk-off rules; error/RBI logic; pitcher responsibility.

---

## Authoritative Rules
1. If a PA ends the half (`outs_before + OutsAdded >= 3`), **LOB** equals the count of occupied bases **at the moment the third out is recorded**.
2. **Walk-off exception:** For any walk-off (HR or non-HR), **LOB = 0**.
3. If the PA does **not** end the half, LOB is unchanged.
4. **Back-compat:** If no third-out snapshot is provided, engine may fall back to legacy behavior (post-play bases) until all call sites are updated.

---

## State & Invariants (minimal)
- `GameState` (existing): inning, half, outs, bases, score, isFinal.
- **NEW (additive):** `PaResolution.BasesAtThirdOut : BaseState?`
  - Snapshot of **starting-base occupancy at the instant of the third out**.
  - Only meaningful when the PA ends the half.
  - Read-only; **must not** be applied to mutate bases.

**Invariant:** When `BasesAtThirdOut` is supplied on a half-ending PA, LOB must be computed from it, regardless of `NewBases`.

---

## Events & Triggers
- **Between PAs:** No effect.
- **ApplyPlateAppearance:** If PA ends the half, compute LOB per this spec before transitioning sides; otherwise no change.
- **Walk-off:** Short-circuit with **LOB=0**.

---

## Validation Logic (deterministic “allow/deny + reason”)
- **If** `IsWalkoffSituation == true` → **use LOB=0** (reason: walk-off rule).
- **Else if** `endsHalf == true` and `BasesAtThirdOut != null` → **use snapshot** (reason: authoritative third-out state).
- **Else if** `endsHalf == true` and snapshot is `null` → **use legacy** (reason: back-compat) and **emit log/warn** (“missing BasesAtThirdOut; used post-play bases”).
- **Else** → no LOB computation on this PA.

---

## Effects on Game State
- LOB for the closing half is set from the rule above.
- No changes to `NewBases` application, lineup advance, or scoring order (walk-off clamp → RBI → ER/UER → mutate).
- Walk-off behavior unchanged (HR exception vs clamp; bases suppressed for non-HR).

---

## Interfaces to Existing Modules
- **Producer:** `AtBatSimulator/BallInPlayResolver` (or PA builder) MAY populate `BasesAtThirdOut` when a third-out scenario is detected.
- **Consumer:** `InningScorekeeper.PerformHalfInningTransition` reads `BasesAtThirdOut` for LOB when `endsHalf`.
- **Logging:** Scoring module logs which source (snapshot vs legacy) was used.

---

## Test Scenarios (black-box; no code here)
1. **Triple Play — Bases Loaded**
   - Before: R1/R2/R3; 0 outs.
   - Resolution: `OutsAdded=3`, `RunsScored=0`, `BasesAtThirdOut = {1,2,3 occupied}`.
   - Expect: LOB=3, half ends, bases cleared for next half.

2. **Double Play — Runner on 3rd Stranded**
   - Before: R3 only; <2 outs.
   - Resolution: ground into DP; `OutsAdded` pushes total to 3; `BasesAtThirdOut = {3rd occupied}`.
   - Expect: LOB=1.

3. **Half-ending K with R1/R2**
   - Before: R1/R2; 2 outs.
   - Resolution: `OutsAdded=1`; `BasesAtThirdOut = {1st,2nd occupied}`.
   - Expect: LOB=2.

4. **Walk-off (non-HR)**
   - Before: tie, R3; PA ends game.
   - Expect: **LOB=0** (ignore snapshot if present).

5. **Walk-off HR**
   - Before: down 2, bases loaded; HR.
   - Expect: **LOB=0**; all 4 runs score (HR exception).

6. **Back-compat fallback**
   - Half ends with no `BasesAtThirdOut`.
   - Expect: LOB computed via legacy method + warning emitted.

---

## Out of Scope / Phase Next
- Runner-by-runner causal detail (which runner made the out) — snapshot is sufficient for v1.
- Pitcher responsibility, inherited runners, decisions.
- Refactoring legacy tests — can be updated opportunistically.

---

## Acceptance Criteria
- LOB on half-ending PAs equals occupied bases **at third out**, not post-play.
- Walk-offs always record LOB=0.
- Deterministic behavior given same inputs; no RNG calls introduced.
- Back-compat: engine tolerates missing snapshot without crashing, but logs a warning.

---

## Notes
- Interim tests that previously “faked” LOB by setting `NewBases` to show occupancy may keep that pattern until the snapshot field is wired end-to-end.
- Once snapshot is live, clean those tests to assert against `BasesAtThirdOut` semantics directly.
